const { WebSocketServer } = require('ws');
const { Deepgram } = require('@deepgram/sdk');

const deepgramApiKey = process.env.DEEPGRAM_API_KEY;

if (!deepgramApiKey) {
  throw new Error("Missing DEEPGRAM_API_KEY in environment variables");
}

const deepgram = new Deepgram(deepgramApiKey);

function startWebSocketServer(server) {
  const wss = new WebSocketServer({ server });

  wss.on('connection', (ws) => {
    console.log("üîó Client connected to WebSocket");

    // ◊ô◊¶◊ô◊®◊™ ◊ó◊ô◊ë◊ï◊® ◊ú÷æDeepgram ◊ì◊®◊ö WebSocket
    const deepgramSocket = deepgram.transcription.live({
      punctuate: true,
      interim_results: false,
      language: 'he' // ◊†◊ô◊™◊ü ◊ú◊©◊†◊ï◊™ ◊ë◊î◊™◊ê◊ù ◊ú◊©◊§◊î ◊î◊®◊¶◊ï◊ô◊î
    });

    // ◊ß◊ë◊ú◊™ ◊™◊ï◊¶◊ê◊ï◊™ ◊û÷æDeepgram ◊ï◊î◊ì◊§◊°◊î ◊ú◊ß◊ï◊†◊°◊ï◊ú
    deepgramSocket.on('transcriptReceived', (data) => {
      const result = JSON.parse(data);
      const transcript = result.channel?.alternatives[0]?.transcript;
      if (transcript) {
        console.log("üó£Ô∏è Deepgram STT:", transcript);
        // ◊ú◊ê ◊†◊©◊ú◊ó ◊ú◊ú◊ß◊ï◊ó ◊õ◊®◊í◊¢
      }
    });

    // ◊ß◊ë◊ú◊™ ◊ê◊ï◊ì◊ô◊ï ◊û◊î◊ú◊ß◊ï◊ó ◊ï◊©◊ú◊ô◊ó◊™◊ï ◊ú÷æDeepgram
    ws.on('message', (message) => {
      if (deepgramSocket.getReadyState() === 1) {
        deepgramSocket.send(message);
      }
    });

    // ◊†◊ô◊ß◊ï◊ô ◊õ◊©◊†◊°◊í◊®
    ws.on('close', () => {
      console.log("‚ùå Client disconnected");
      deepgramSocket.finish();
    });
  });
}

module.exports = startWebSocketServer;
